{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/champion/champion.component.html","webpack:///./src/app/champion/champion.component.ts","webpack:///./src/app/match/match.component.html","webpack:///./src/app/match/match.component.ts","webpack:///./src/app/match/match.service.ts","webpack:///./src/app/overwolf/overwolf.interfaces.ts","webpack:///./src/app/overwolf/overwolf.service.ts","webpack:///./src/app/socket.interface.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/spell/spell.component.html","webpack:///./src/app/spell/spell.component.ts","webpack:///./src/app/summoner/summoner.component.html","webpack:///./src/app/summoner/summoner.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<match></match>\r\n","import { Component } from '@angular/core';\r\nimport { SocketService } from './socket.service';\r\nimport { OverwolfService } from './overwolf/overwolf.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  socket: SocketService = new SocketService();\r\n  overwolfService: OverwolfService = new OverwolfService();\r\n\r\n  constructor() {\r\n    this.socket.connect();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { SummonerComponent } from './summoner/summoner.component';\r\nimport { SpellComponent } from './spell/spell.component';\r\nimport { ChampionComponent } from './champion/champion.component';\r\nimport { SocketService } from './socket.service';\r\nimport { MatchComponent } from './match/match.component';\r\nimport { MatchService } from './match/match.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SummonerComponent,\r\n    SpellComponent,\r\n    ChampionComponent,\r\n    MatchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [SocketService, MatchService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"champion-container\">\r\n  <img src=\"http://ddragon.leagueoflegends.com/cdn/6.24.1/img/champion/{{this.image}}\"/>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'champion',\r\n  templateUrl: './champion.component.html',\r\n  styleUrls: ['./champion.component.scss']\r\n})\r\nexport class ChampionComponent {\r\n  @Input() id: number;\r\n  @Input() name: string;\r\n  @Input() image: string;\r\n\r\n  constructor() { }\r\n\r\n\r\n}\r\n","<div *ngFor=\"let summoner of summoners\">\r\n    <summoner [id]=\"summoner?.id\"\r\n              [champion] = \"summoner?.champion\"\r\n              [spell1] = \"summoner?.spell1\"\r\n              [spell2] = \"summoner?.spell2\">\r\n    </summoner>\r\n</div>\r\n","import {Component, OnInit, Input, ChangeDetectorRef} from '@angular/core';\r\nimport { Summoner } from '../summoner/summoner.component';\r\nimport { MatchService } from './match.service';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface Match {\r\n  id: number;\r\n  summoners: Summoner[];\r\n}\r\n\r\n@Component({\r\n  selector: 'match',\r\n  templateUrl: './match.component.html',\r\n  styleUrls: ['./match.component.css']\r\n})\r\n\r\nexport class MatchComponent {\r\n  match: Match;\r\n  summoners: Summoner[] = [];\r\n\r\n  constructor(private matchService: MatchService, private changeDetection: ChangeDetectorRef) {\r\n    matchService.matchData.subscribe((match: Match) => {\r\n      console.log(match)\r\n      if (!match) {\r\n        return;\r\n      }\r\n\r\n      this.match = match;\r\n      this.summoners = match.summoners;\r\n      this.changeDetection.detectChanges();\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Match } from './match.component';\r\nimport { SocketService } from '../socket.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class MatchService {\r\n    // Kan heel deze service niet weg ???????\r\n    // de match component kan ook direct gekoppelc worden aan de socket service\r\n\r\n    matchData: Subject<Match> = new Subject<Match>();\r\n\r\n    constructor(private socketService: SocketService) {\r\n\r\n      socketService.connectedMatch\r\n          .subscribe((match: Match) => {\r\n              this.matchData.next(match);\r\n          });\r\n    }\r\n}\r\n","export enum Features {\r\n\r\n    matchState = 'matchState',\r\n    summonerInfo = 'summoner_info',\r\n    gameMode = 'gameMode'\r\n}\r\n\r\nexport interface Update {\r\n\r\n    feature: string;\r\n    info: Object;\r\n}\r\n\r\nexport interface SummonerInfo {\r\n\r\n    id: string;\r\n    region: string;\r\n    name: string;\r\n    champion: string;\r\n}\r\n\r\nexport interface GameModeInfo {\r\n\r\n    gameMode: string;\r\n}\r\n\r\nexport interface MatchState {\r\n\r\n    matchStarted: string;\r\n    matchOutcome: string;\r\n}\r\n","import { SocketService } from '../socket.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {Features, MatchState, Update} from './overwolf.interfaces';\r\nimport {SocketEvents, CreationRequest} from '../socket.interface';\r\ndeclare const overwolf; // Overwolf uses a build in js file\r\n\r\n\r\nconst requiredFeatures: string[] = Object.keys(Features)\r\n                                      .map(feature => Features[feature]); // type of events we listen to\r\nconst overwolfEvents = overwolf.games.events;\r\n\r\nexport class OverwolfService {\r\n\r\n    summonerId: string;\r\n    socketService: SocketService = new SocketService();\r\n    matchStarted: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor() {\r\n\r\n      this.setFeatures();\r\n\r\n      this.matchStarted\r\n        .subscribe((isStarted: boolean) => {\r\n\r\n          if (isStarted) {\r\n            this.gameStart(Number(this.summonerId));\r\n          }\r\n        });\r\n\r\n        // Check if match is already started\r\n        overwolfEvents.getInfo( (info) => {\r\n          console.log(info);\r\n          this.summonerId = info.res.summoner_info.id;\r\n\r\n          const matchState: MatchState = {\r\n            matchStarted: info.res.game_info.matchStarted,\r\n            matchOutcome: ''\r\n          };\r\n\r\n          this.setMatchState(matchState);\r\n        });\r\n\r\n\r\n      overwolfEvents.onInfoUpdates2\r\n        .addListener( (infoUpdateChange: Update) => {\r\n\r\n          if (!this.summonerId) {\r\n              this.updateSummoner();\r\n          }\r\n\r\n          if (infoUpdateChange.feature === Features.matchState) {\r\n            this.setMatchState(infoUpdateChange.info['game_info'] as MatchState);\r\n          }\r\n        });\r\n\r\n    }\r\n\r\n    private gameStart(summonerId: number): void {\r\n        this.socketService.message(SocketEvents.createMatch, { summonerId: summonerId } as CreationRequest);\r\n        console.log('request send');\r\n    }\r\n\r\n    private setFeatures(): void {\r\n\r\n        overwolfEvents.setRequiredFeatures(requiredFeatures, (info) => {\r\n            if (info.status === 'error') {\r\n                // check info.status possible values\r\n                console.log(info.reason);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    private setMatchState(matchState: MatchState): void {\r\n\r\n        this.matchStarted.next(matchState.matchStarted === 'true');\r\n    }\r\n\r\n    private updateSummoner(): void {\r\n      overwolfEvents.getInfo((info) => {\r\n        if (info) {\r\n          this.summonerId = info.res.summoner_info.id;\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","\r\nexport enum SocketEvents {\r\n  startCooldown = 'startCooldown',\r\n  createMatch = 'createMatch',\r\n  matchCreated = 'matchCreated',\r\n  sumUsed = 'sumUsed',\r\n  requestError = 'error',\r\n}\r\n\r\nexport interface RequestError {\r\n  status: number;\r\n}\r\n\r\nexport interface CreationRequest {\r\n  summonerId: number;\r\n}\r\n\r\nexport interface Payload {\r\n  roomId: number;\r\n  data: any;\r\n}\r\n\r\nexport interface CooldownActivationData {\r\n  spellId: string;\r\n  timeStamp: number; // unix timestamp data type\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport * as socketIo from 'socket.io-client';\r\nimport { Subject } from 'rxjs';\r\nimport { Match } from './match/match.component';\r\nimport Socket = SocketIOClient.Socket;\r\nimport {Payload, RequestError, SocketEvents} from './socket.interface';\r\n\r\nconst SERVER_URL = 'http://127.0.0.1:3000/';\r\nconst socket: Socket = socketIo(SERVER_URL);\r\n\r\n@Injectable()\r\nexport class SocketService {\r\n\r\n  connectedMatch: Subject<Match> = new Subject<Match>(); // kan deze global ???\r\n  private roomId: number;\r\n  constructor() {\r\n\r\n    this.listen(SocketEvents.matchCreated, (match: Match) => {\r\n\r\n      this.roomId = match.id;\r\n      this.connectedMatch.next( match ); // gebeurd voor elke instantie\r\n    });\r\n  }\r\n\r\n  connect(): void {\r\n    socket.on('connect', () => {\r\n      console.log('connected');\r\n    });\r\n    this.listen(SocketEvents.requestError, (socketError) => { this.handleSocketError(socketError as RequestError); });\r\n\r\n  }\r\n\r\n  message(type: SocketEvents, data: any) {\r\n    const payload: Payload = {\r\n      roomId: this.roomId,\r\n      data: data,\r\n    };\r\n\r\n    socket.emit(type, payload);\r\n  }\r\n\r\n  listen<T>(type: SocketEvents, callback: (data: T) => void) {\r\n    socket.on(type, callback);\r\n  }\r\n\r\n  handleSocketError(socketError: RequestError) {\r\n    // not fully implemented yet\r\n    switch (socketError.status) {\r\n      case 401: console.log(socketError)\r\n        break;\r\n      case 403: console.log(socketError)\r\n        break;\r\n      case 404: console.log(socketError)\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n","<div (click)=\"startCooldown()\"\r\n     class=\"spell-container\"\r\n     [ngClass] = \"{ 'spell-container--on-cooldown': countdown < cooldown }\">\r\n\r\n     <img src=\"http://ddragon.leagueoflegends.com/cdn/6.24.1/img/spell/{{image}}\">\r\n\r\n  <div class=\"spell-container__countdown\"><p>{{ countdown }}</p></div>\r\n</div>\r\n","import {Component, OnInit, Input, OnDestroy, ChangeDetectorRef} from '@angular/core';\r\nimport { SocketService } from '../socket.service';\r\nimport { interval, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport {CooldownActivationData, SocketEvents} from '../socket.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'spell',\r\n  templateUrl: './spell.component.html',\r\n  styleUrls: ['./spell.component.scss']\r\n})\r\n\r\nexport class SpellComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  @Input() name: string;\r\n  @Input() image: string;\r\n  @Input() cooldown: number;\r\n  @Input() summonerId: number;\r\n\r\n  private destroyer$: Subject<void> = new Subject<void>();\r\n\r\n  countdown = 0;\r\n\r\n  get spellId(): string {\r\n    return `${this.id}-${this.summonerId}`;\r\n  }\r\n\r\n  constructor(private socketService: SocketService, private changeDetection: ChangeDetectorRef) {\r\n\r\n    socketService.listen(SocketEvents.sumUsed, (data: CooldownActivationData) => {\r\n\r\n      if (this.spellId !== data.spellId) {\r\n\r\n        return;\r\n      }\r\n\r\n      const stopCooldown$: Subject<void> = new Subject<void>();\r\n\r\n      interval(1000)\r\n        .pipe(\r\n          takeUntil(this.destroyer$),\r\n          takeUntil(stopCooldown$)\r\n        )\r\n        .subscribe(() => {\r\n          this.countdown--;\r\n          changeDetection.detectChanges();\r\n          if (this.countdown === 0) {\r\n            stopCooldown$.next();\r\n            this.resetCountdown();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resetCountdown();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyer$.next();\r\n  }\r\n\r\n  startCooldown() {\r\n    if (this.countdown !== this.cooldown) {\r\n      return;\r\n    }\r\n\r\n    const cooldownActivationData: CooldownActivationData = {\r\n\r\n      spellId: this.spellId,\r\n      timeStamp: Date.now(),\r\n    };\r\n\r\n    this.socketService.message(SocketEvents.startCooldown, cooldownActivationData);\r\n\r\n    // we start counting down immediately to trigger the state change and\r\n    // which is acceptable because there is most likely already a human response delay of at least a second\r\n    // this.countdown--;\r\n  }\r\n\r\n  private resetCountdown(): void {\r\n    this.countdown = this.cooldown;\r\n    this.changeDetection.detectChanges();\r\n  }\r\n}\r\n\r\n","<div class=\"summoner-container\">\r\n\r\n  <champion [id] = \"champion.id\"\r\n            [name] = \"champion.name\"\r\n            [image] = \"champion.image\">\r\n  </champion>\r\n\r\n  <spell [id] = \"spell1.id\"\r\n         [name] = \"spell1.name\"\r\n         [image] = \"spell1.image\"\r\n         [cooldown] = \"spell1.cooldown\"\r\n         [summonerId]= \"id\">\r\n  </spell>\r\n\r\n  <spell [id] = \"spell2.id\"\r\n         [name] = \"spell2.name\"\r\n         [image] = \"spell2.image\"\r\n         [cooldown] = \"spell2.cooldown\"\r\n         [summonerId]= \"id\">\r\n  </spell>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n\r\nexport interface Summoner {\r\n  id: number;\r\n  champion: Champion;\r\n  spell1: Spell;\r\n  spell2: Spell;\r\n  hasCDR: boolean;\r\n}\r\n\r\ninterface Champion {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n}\r\n\r\ninterface Spell {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n  cooldown: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'summoner',\r\n  templateUrl: './summoner.component.html',\r\n  styleUrls: ['./summoner.component.scss'],\r\n  providers: []\r\n})\r\nexport class SummonerComponent implements OnInit {\r\n  @Input() id: number;\r\n  @Input() champion: Champion;\r\n  @Input() spell1: Spell;\r\n  @Input() spell2: Spell;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log('ngOnInit:', this.champion);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}