{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/overwolf.interfaces.ts","webpack:///./src/app/window.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {WindowService} from './window.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'controller';\n  constructor(private windowService: WindowService){ }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {WindowService} from './window.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [WindowService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {BehaviorSubject} from 'rxjs';\r\n\r\nexport enum Feature {\r\n    matchState = 'matchState',\r\n    death = 'death',\r\n    respawn = 'respawn',\r\n    abilities = 'abilities',\r\n    kill = 'kill',\r\n    assist = 'assist',\r\n    gold = 'gold',\r\n    minions = 'minions',\r\n    summonerInfo = 'summoner_info',\r\n    gameMode = 'gameMode',\r\n    teams = 'teams',\r\n    level = 'level',\r\n    announcer = 'announcer'\r\n}\r\n\r\nexport enum Hotkey {\r\n  showWindow = 'showWindow',\r\n}\r\n\r\nexport enum Status {\r\n  error = 'error',\r\n  success = 'success'\r\n}\r\n\r\nexport interface OverwolfKeyEvent {\r\n  key: string;\r\n  onGame: boolean;\r\n}\r\n\r\nexport interface ShowWindowHotkey {\r\n  ctrlPressed: boolean;\r\n  spacePressed: boolean;\r\n}\r\n\r\nexport interface NewEventResultSet {\r\n  events: NewEvent[];\r\n}\r\n\r\nexport interface NewEvent {\r\n  name: string;\r\n  data: any;\r\n}\r\n// TODO ADD ALL POSSIBLE EVENTS\r\nexport enum NewEventName {\r\n  matchEnd = 'matchEnd',\r\n}\r\n\r\nexport enum WindowState {\r\n  minimized = 'minimized',\r\n  maximized = 'maximized',\r\n  closed = 'closed',\r\n  opened = 'opened'\r\n}\r\n\r\nexport interface CurrentWindowStates {\r\n  inGame: WindowState;\r\n  desktop: WindowState;\r\n}\r\n\r\nexport interface WindowUpdate {\r\n  app_id: string;\r\n  window_id: string;\r\n  window_name: string;\r\n  window_state: WindowState;\r\n  window_previous_state: WindowState;\r\n}\r\n\r\nexport interface WindowResult {\r\n  status: string;\r\n  window: OverwolfWindow;\r\n}\r\n\r\nexport interface OverwolfWindow {\r\n    id: string;\r\n    name: string;\r\n    width: number;\r\n    height: number;\r\n    top: number;\r\n    left: number;\r\n    isVisible: boolean;\r\n    Parent: OverwolfWindow;\r\n    isRestored?: BehaviorSubject<boolean>;\r\n}\r\n\r\nexport enum WindowName {\r\n  inGameWindow = 'inGameWindow',\r\n  desktopWindow = 'desktopWindow',\r\n  controller = 'controller'\r\n}\r\n\r\nexport enum WindowMessageId {\r\n  matchState = 'matchState'\r\n}\r\n\r\nexport interface Update {\r\n    summoner_info: SummonerInfo;\r\n    game_info: GameInfo;\r\n}\r\ninterface SummonerInfo {\r\n  id: number;\r\n  name: string;\r\n  region: string;\r\n}\r\n\r\ninterface GameInfo {\r\n  matchStarted: boolean;\r\n}\r\nexport interface GameModeInfo {\r\n    gameMode: string;\r\n}\r\n\r\nexport interface MatchState {\r\n  summonerId: number;\r\n  summonerName: string;\r\n  region: string;\r\n  matchActive: boolean;\r\n}\r\nexport interface Game {\r\n  isInFocus: boolean;\r\n  isRunning: boolean;\r\n  allowsVideoCapture: boolean;\r\n  title: string;\r\n  id: number;\r\n  width: number;\r\n  height: number;\r\n  logicalWidth: number;\r\n  logicalHeight: number;\r\n  renderers: string[];\r\n  detectedRenderer: string;\r\n  executionPath: string;\r\n  sessionId: string;\r\n  commandLine: string;\r\n}\r\n\r\nexport interface GameInfoChangeData {\r\n  gameInfo: Game;\r\n  resolutionChanged: boolean;\r\n  focusChanged: boolean;\r\n  runningChanged: boolean;\r\n  gameChanged: boolean;\r\n}\r\n\r\n\r\n","import {Injectable} from '@angular/core';\nimport {\n  CurrentWindowStates,\n  Feature,\n  GameInfoChangeData,\n  MatchState,\n  NewEvent,\n  NewEventName,\n  NewEventResultSet,\n  OverwolfWindow,\n  Status,\n  Update,\n  WindowMessageId,\n  WindowName,\n  WindowResult,\n  WindowState,\n  WindowUpdate\n} from './overwolf.interfaces';\nimport {BehaviorSubject, interval, Subject, timer} from 'rxjs';\n\nimport {takeUntil} from 'rxjs/operators';\n\n\ndeclare const overwolf; // Overwolf uses a build in js file\n\nconst LOL_GAME_ID = 54261;\nconst overwolfEvents = overwolf.games.events;\nconst windows = overwolf.windows;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n\n  initialWindowStates: CurrentWindowStates = {\n    inGame: WindowState.closed,\n    desktop: WindowState.closed\n  };\n\n  initialMatchState: MatchState = {\n    matchActive: false,\n    summonerName: null,\n    region: null,\n    summonerId: null\n  };\n\n  inGameWindow: OverwolfWindow;\n  desktopWindow: OverwolfWindow;\n  controller: OverwolfWindow;\n  featuresSet = false;\n  stopRequestingFeatures$: Subject<void> = new Subject<void>();\n  windowStates$: BehaviorSubject<CurrentWindowStates> = new BehaviorSubject<CurrentWindowStates>(this.initialWindowStates);\n  matchState$: BehaviorSubject<MatchState> = new BehaviorSubject<MatchState>(this.initialMatchState);\n\n  constructor() {\n\n    windows.onMainWindowRestored.addListener(() => this.onReopening());\n    this.setWindows();\n    this.watchGameLaunch();\n    this.listenWindowState();\n    this.handleOverwolfEvents();\n    this.matchState$.subscribe((matchState: MatchState) => {\n      if (matchState.matchActive) {\n        this.setInGameWindow(() => this.restoreWindow(this.inGameWindow, () => {\n          timer(8000).subscribe(() => this.sendMatchState(matchState));\n        }));\n      }\n    });\n  }\n\n  private usingFeatures: Feature[] = [\n    Feature.matchState,\n    Feature.summonerInfo\n  ];\n\n  private onReopening() {\n    const currentMatchState = this.matchState$.getValue();\n    const currentWindowStates = this.windowStates$.getValue();\n\n    if (currentMatchState.matchActive && currentWindowStates.inGame === WindowState.closed) {\n      this.restoreWindow(this.inGameWindow, () => {\n        timer(8000).subscribe(() => this.sendMatchState(currentMatchState));\n      });\n    } else if (!currentMatchState.matchActive && currentWindowStates.desktop) {\n      this.restoreWindow(this.desktopWindow);\n    }\n  }\n\n  private handleOverwolfEvents(): void {\n    overwolfEvents.getInfo((info: any) => {\n      this.updateInfo(info);\n      // if there is no game running open the desktop window\n      if (!this.checkEventSource(info)) {\n        this.restoreWindow(this.desktopWindow);\n      }\n    });\n    overwolfEvents.onInfoUpdates2.addListener((info: any) => this.updateInfo(info));\n    overwolfEvents.onNewEvents.addListener((resultSet: NewEventResultSet) => this.handleNewEvents(resultSet.events));\n  }\n\n  private setWindows(): void {\n    this.setDesktopWindow();\n    this.setControllerWindow();\n    this.windowStates$.subscribe((currentWindowStates: CurrentWindowStates) => {\n      console.log(currentWindowStates);\n      if (currentWindowStates.inGame === WindowState.closed && currentWindowStates.desktop === WindowState.closed) {\n        this.closeWindow(this.controller);\n      }\n    });\n  }\n\n  listenWindowState() {\n    windows.onStateChanged.addListener((state: WindowUpdate) => {\n      const currentWindowStates = this.windowStates$.getValue();\n      if (this.inGameWindow && state.window_id === this.inGameWindow.id) {\n        currentWindowStates.inGame = state.window_state;\n        this.windowStates$.next(currentWindowStates);\n      } else if (state.window_id === this.desktopWindow.id) {\n        if (state.window_id === this.desktopWindow.id) {\n          currentWindowStates.desktop = state.window_state;\n          this.windowStates$.next(currentWindowStates);\n        }\n      }\n    });\n  }\n\n\n  /**\n   *\n   * Set the event types we react to\n   *\n   */\n  private setFeatures(): void {\n    overwolfEvents.setRequiredFeatures(this.usingFeatures, (info) => {\n      if (info.status === Status.error) {\n        console.log(info.reason);\n        return;\n      } else {\n        this.featuresSet = true;\n        this.stopRequestingFeatures$.next();\n      }\n    });\n  }\n\n  private handleNewEvents(events: NewEvent[]): void {\n    for (const event of events) {\n      switch (event.name) {\n        case NewEventName.matchEnd:\n          const newMatchState: MatchState = this.matchState$.getValue();\n          newMatchState.matchActive = false;\n          this.matchState$.next(newMatchState);\n          break;\n      }\n    }\n  }\n\n  private updateInfo(info: any): void {\n    const result: Update = this.checkEventSource(info);\n\n    if (!result) {\n      return;\n    }\n    console.log('info passed test');\n    this.matchState$.next(\n      this.editMatchState(this.matchState$.getValue(), result));\n  }\n\n  private editMatchState(matchState: MatchState, result: Update): MatchState {\n    if (this.hasSummonerId(result)) {\n      matchState.summonerId = result.summoner_info.id;\n    }\n    if (this.hasSummonerRegion(result)) {\n      matchState.region = result.summoner_info.region;\n    }\n    if (this.hasMatchInfo(result)) {\n      matchState.matchActive = result.game_info.matchStarted;\n    }\n\n    return matchState;\n  }\n\n  /**\n   *\n   * Check if the info was send from InfoUpdates2 or GetInfo functions\n   *\n   * @param info\n   */\n  private checkEventSource(info: any): Update {\n    if (this.fromInfoUpdates(info)) {\n      return info.info;\n    } else if (this.fromGetInfo(info)) {\n      return info.res;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   *\n   * Check if info was send from GetInfo\n   *\n   * @param info\n   */\n  private fromGetInfo(info: any): boolean {\n\n    if (info.res) {\n      return true;\n    }\n  }\n\n  /**\n   *\n   * Check if data contains game info\n   *\n   * @param result\n   */\n  private hasMatchInfo(result: Update): boolean {\n\n    if (result.game_info && result.game_info.matchStarted) {\n      return true;\n    }\n    return false;\n\n  }\n\n  /**\n   *\n   * Check if data contains summoner info\n   *\n   * @param result\n   */\n  private hasSummonerInfo(result: Update): boolean {\n\n    if (result.summoner_info) {\n      return true;\n    }\n    return false;\n\n  }\n\n  private hasSummonerId(result: Update): boolean {\n    if (this.hasSummonerInfo(result)) {\n      if (result.summoner_info.id) {\n        return true;\n      }\n    }\n  }\n\n  private hasSummonerRegion(result: Update): boolean {\n    if (this.hasSummonerInfo(result)) {\n      if (result.summoner_info.region) {\n        return true;\n      }\n    }\n  }\n\n  /**\n   *\n   *  Check if info was send from InfoUpdates2\n   *\n   * @param info\n   */\n  private fromInfoUpdates(info: any): boolean {\n    // TODO ASK dit is geen goeie check enige wat vast staat is dat info updates geen res heeft\n    if (info.feature) {\n      return true;\n    }\n  }\n\n  private setControllerWindow(): void {\n    windows.obtainDeclaredWindow(WindowName.controller, (result: WindowResult) => {\n      result.window ? this.controller = result.window : null;\n    });\n  }\n\n  private setDesktopWindow(): void {\n    windows.obtainDeclaredWindow(WindowName.desktopWindow, (result: WindowResult) => {\n      result.window ? this.desktopWindow = result.window : null;\n      this.desktopWindow.isRestored = new BehaviorSubject<boolean>(false);\n    });\n  }\n\n  private setInGameWindow(callback?: () => void): void {\n    windows.obtainDeclaredWindow(WindowName.inGameWindow, (result: WindowResult) => {\n      result.window ? this.inGameWindow = result.window : null;\n      windows.changePosition(this.inGameWindow.id, 0, 443);\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  public restoreWindow(window: OverwolfWindow, callback?: () => void): void {\n    if (!callback) {\n      callback = () => {\n      };\n    }\n    // @ts-ignore\n    windows.restore(window.id, (reply) => callback(reply));\n  }\n\n  private closeWindow(window: OverwolfWindow) {\n    if (window) {\n      windows.close(window.id);\n    }\n  }\n\n  private sendMatchState(matchState: MatchState): void {\n    this.sendWindowMessage(this.inGameWindow, WindowMessageId.matchState, matchState, (reply) => {\n      console.log(reply);\n    });\n  }\n\n  private sendWindowMessage(window: OverwolfWindow, messageId: WindowMessageId, messageContent: any, callback: (reply) => void) {\n    windows.sendMessage(window.id, messageId, messageContent, (reply) => callback(reply));\n  }\n\n  private watchGameLaunch() {\n    overwolf.games.getRunningGameInfo((gameInfo: GameInfoChangeData) => {\n      if (this.leagueIsRunning(gameInfo)) {\n        this.setFeatures();\n      }\n    });\n    overwolf.games.onGameInfoUpdated.addListener((gameInfoChangeData: GameInfoChangeData) => {\n      const isRunning = this.leagueIsRunning(gameInfoChangeData);\n\n      if (isRunning && !this.featuresSet) {\n        interval(3000)\n          .pipe(takeUntil(this.stopRequestingFeatures$))\n          .subscribe(() => this.setFeatures());\n      } else if (!isRunning) {\n        this.featuresSet = false;\n        this.stopRequestingFeatures$.next();\n        this.closeWindow(this.inGameWindow);\n      }\n    });\n  }\n\n  private leagueIsRunning(gameInfoChangeData: GameInfoChangeData): boolean {\n    if (gameInfoChangeData.gameInfo === null) {\n      return false;\n    }\n    return gameInfoChangeData.gameInfo.id === LOL_GAME_ID && gameInfoChangeData.gameInfo.isRunning;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}